-- developpeur web
job tile field 
xpath : //*[@id="text-input-what"]
full_xpath = /html/body/div/div[3]/div[1]/div/div/div/form/div[1]/div/div/div/div[2]/input

--jobs location 
xpath: //*[@id="text-input-where"]

-- find jobs location button 
xpath : //*[@id="whatWhere"]/div/div/form/div[3]/button

#    find_jobs_btn = driver.find_element_by_xpath(
        '//*[@id="whatWhere"]/div/div/form/div[3]/button')
    find_jobs_btn.click()



    -----------------------------------------------------
      try:    
        # give variable to by pass issue heer 

        if location_field == '':
            location_input = str(input  
                             ("Do you want to give location or proccede to see all available jobs  ???" + "\n"))
 
            answer_me = str(input(' Yes --> give location' +
                              ' |||' + 'No --> See all' + '\n'))

            if answer_me == 'yes':
                name = str(input('Enter location'))
                location_field.send_keys(name)
                location_field.send_keys(Keys.ENTER)

            # answer == no
            else:
                location_field.send_keys(Keys.CONTROL + "a")
                location_field.send_keys(Keys.DELETE)
                time.sleep(3)

                print(location_input  + '\n' +  answer_me )
                if answer_me == 'yes':
                    print(name)
                    location_field.send_keys(name)
                    location_field.send_keys(Keys.ENTER)
        # if answer is NO
                else:
                    time.sleep(2)
                    location_field.send_keys(Keys.ENTER)

        
        # if location is filled 
        else:
            location_field.send_keys(Keys.CONTROL + "a")
            location_field.send_keys(Keys.DELETE)
            time.sleep(3)
        # after deleting promte me to this string again
        # error here  variable is not definde
            print(location_input + '\n' + '--' + answer_me)

        #answer is yes
            if answer_me == 'yes':
                print(name)
                location_field.send_keys(name)
                location_field.send_keys(Keys.ENTER)
            # if answer is NO
            else:
                time.sleep(2)
                location_field.send_keys(Keys.ENTER)

    except ValueError:
        print('invalid input')

    # VAlidate if location filed empty or not (by Default)
    # if location_field == '':
    #     location_input = str(input
    #                          ("Do you want to give location or proccede to see all available jobs  ???" + "\n"))

    #     answer_me = str(input(' Yes --> give location' +
    #                           ' |||' + 'No --> See all' + '\n'))
    #     if answer_me == 'yes':
    #         name = str(input('Enter location'))
    #         location_field.send_keys(name)
    #         location_field.send_keys(Keys.ENTER)

    #     # if answer is NO
    #     else:
    #         time.sleep(1)
    #         location_field.send_keys(Keys.ENTER)

    # else:
    #     location_field.send_keys(Keys.CONTROL + "a")
    #     location_field.send_keys(Keys.DELETE)
    #     time.sleep(3)

    #     # after deleting promte me to this string again
    #     # error here  variable is not definde
    #     print(location_input + '\n' + '--' + answer_me)

    #     #answer is yes
    #     if answer_me == 'yes':
    #         print(name)
    #         location_field.send_keys(name)
    #         location_field.send_keys(Keys.ENTER)
    #     # if answer is NO
    #     else:
    #         time.sleep(2)
    #         location_field.send_keys(Keys.ENTER)



    # Something else ! 
        # choice  = input(str('Enter location  :  \n'))
    # if choice == all_locations:
    #     print("working ")
    # else:
    #     print('Error')
    
    # retrieving all links of these jobs
    # spantag
    # all_links = []
    # span_tag_ =  driver.find_element_by_xpath('//*[@id="refineresults"]/span')
    # # div_tag
    # div_tag  = driver.find_element_by_id('LOCATION_rbo')
    # ul = div_tag.find_element_by_tag_name('ul')
    # li  = ul.find_element_by_tag_name('li')
    # try:
    #     for links in li.find_elements_by_tag_name('a'):
    #         link = links.get_attribute('href')
    #         print('\n', 'Founded Urls : ', all_links.append(link))
    # except:
    #     ValueError()
    # this list of [l1, l2 /] etc , are location's name aka cities/hrefs
    # l1 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[1]/a')
    # l2 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[2]/a')
    # l3 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[3]/a')
    # l4 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[4]/a')
    # l5 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[5]/a')
    # l6 = lists.find_element_by_xpath(
    #     '//*[@id="LOCATION_rbo"]/ul/li[6]/a')

    # using the beautifulsoup to scrap all hrefs
    # Selenium hands the page to Beautifulsoup
    # define a soup obj / request

    ------------------------------------------------------
    '''

                            Online Python Compiler.
                Code, Compile, Run and Debug python program online.
Write your code in this editor and press "Run" button to execute it.

'''

import re 



urls =  ['https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=permanent',  
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=temporary',
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=internship',
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=fulltime', 
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=contract',
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=apprenticeship',
'https://ma.indeed.com/emplois?q=php&rbl=Rabat&jlid=d8946cbfa6e79760&jt=subcontract']

take  = r'https://\w+\.\w+\.com/'
slice_current_url = re.search(take, urls) 
print (slice_current_url )



'''
my_type = input(str('Type in : '))
dic = {
        'CDI': 'permanent', 'Intréim': 'temporary', 'Temp plein': 'full time',
        'Stage': 'internship', 'Freelance / Ind�pendant': 'subcontract', 'CDD': 'contract',
        'Temp partiel': 'parttime', 'Apprentissage / Alternance': 'apprenticeship'
    }
# match user input against dic.values to get the url
for key, value in dic.items():
    if key == my_type:
        print('match is :', value)
        print('****'*30)
        # Get matched link and proceed
        
        match  = re.compile(r'jt=' + value)
        found = list(filter(match.search, urls))
        # remove QOUAts befor you print
        print('urls  : ',[l.strip('.') for l in found])
'''
    